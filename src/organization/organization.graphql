scalar DateTime

type Organization {
  id: ID!
  name: String!
  subdomain: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

input CreateOrganizationInput {
  name: String!
  subdomain: String!
}

input UpdateOrganizationInput {
  id: ID!
  name: String
  subdomain: String
}

input OrganizationOrderByWithRelationInput {
  name: SortOrder
  subdomain: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

type Query {
  organizations: [Organization]!
  organization(id: ID!): Organization
}

type Mutation {
  createOrganization(
    createOrganizationInput: CreateOrganizationInput!
  ): Organization!
  updateOrganization(
    updateOrganizationInput: UpdateOrganizationInput!
  ): Organization!
  removeOrganization(id: ID!): Organization
}
