type User {
  id: ID!
  name: String!
  email: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  id: ID!
  name: String
  email: String
  password: String
}

input FindManyUserArgs {
  where: UserWhereInput
  orderBy: [UserOrderByWithRelationInput!]
  cursor: UserWhereUniqueInput
  take: Int
  skip: Int
}

type Query {
  users(args: FindManyUserArgs!): [User]!
  user(id: ID!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User
}
